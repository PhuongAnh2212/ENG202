# -*- coding: utf-8 -*-
"""[ENG202] Assignment 4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jRqznhp6Xv9B87PH402l_s9NCwNN3CFi
"""

import numpy as np
import matplotlib.pyplot as plt
from fractions import Fraction

"""# Case 1"""

import math

def trilaterate(C1, C2, distance1, distance2):
    x1, y1 = C1
    x2, y2 = C2

    U = math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)

    a = (distance1 ** 2 - distance2 ** 2 + U ** 2) / (2 * U)
    h = math.sqrt(distance1 ** 2 - a ** 2)

    x = x1 + a * (x2 - x1) / U
    y = y1 + a * (y2 - y1) / U


    intersection_point1 = (x + h * (y2 - y1) / U, y - h * (x2 - x1) / U)
    intersection_point2 = (x - h * (y2 - y1) / U, y + h * (x2 - x1) / U)

    return intersection_point1, intersection_point2


C1 = (1, 2)
C2 = (8, 2)
distance1 = 7
distance2 = 4

try:
    point1, point2 = trilaterate(C1, C2, distance1, distance2)
    print("Possible Locations for the Unknown Point:")
    print(f"Global Location 1: {point1}")
    print(f"Global Location 2: {point2}")
except ValueError as e:
    print(e)

"""# Case 2"""

import math

def trilaterate(C1, C2, distance1, distance2):
    x1, y1 = C1
    x2, y2 = C2

    U = math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)

    a = (distance1 ** 2 - distance2 ** 2 + U ** 2) / (2 * U)
    h = math.sqrt(distance1 ** 2 - a ** 2)

    x = x1 + a * (x2 - x1) / U
    y = y1 + a * (y2 - y1) / U


    intersection_point1 = (x + h * (y2 - y1) / U, y - h * (x2 - x1) / U)
    intersection_point2 = (x - h * (y2 - y1) / U, y + h * (x2 - x1) / U)

    return intersection_point1, intersection_point2


C1 = (3, 5)
C2 = (9, 1)
distance1 = 9
distance2 = 3

try:
    point1, point2 = trilaterate(C1, C2, distance1, distance2)
    print("Possible Locations for the Unknown Point:")
    print(f"Global Location 1: {point1}")
    print(f"Global Location 2: {point2}")
except ValueError as e:
    print(e)

"""# Archives"""

import math
x1, y1 = 1, 2  # Center of circle 1
x2, y2 = 8, 2  # Center of circle 2
r1 = 7       # Radius of circle 1
r2 = 4         # Radius of circle 2

U = math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)

a = (r1 ** 2 - r2 ** 2 + U ** 2) / (2 * U)

h1 = math.sqrt(r1 ** 2 - a ** 2)
h2 = -math.sqrt(r1 ** 2 - a ** 2)

intersection_point1 = (x1 + a, y1 + h1)
intersection_point2 = (x1 + a, y1 + h2)

print("Intersection Point 1:", intersection_point1)
print("Intersection Point 2:", intersection_point2)

import math
x1, y1 = 3, 5  # Center of circle 1
x2, y2 = 9, 1  # Center of circle 2
r1 = 9        # Radius of circle 1
r2 = 3         # Radius of circle 2

U = math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)

a = (r1 ** 2 - r2 ** 2 + U ** 2) / (2 * U)

h1 = math.sqrt(r1 ** 2 - a ** 2)
h2 = -math.sqrt(r1 ** 2 - a ** 2)

intersection_point1 = (x1 + a, y1 + h1)
intersection_point2 = (x1 + a, y1 + h2)

print("Intersection Point 1:", intersection_point1)
print("Intersection Point 2:", intersection_point2)